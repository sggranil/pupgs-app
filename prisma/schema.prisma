// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Uncomment if you are going to use your local DB
// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  password        String
  first_name      String
  middle_name     String?
  last_name       String
  ext_name        String?
  prefix          String?
  role            String
  tel_number      String?
  start_date      DateTime?
  pass_date       DateTime?
  standing        String?
  program         String?
  department      String?
  position        String?
  thesis          Thesis[]
  adviser         Adviser? @relation
  student         Student? @relation
  is_deleted      Boolean  @default(false)
}

model Student {
  id                Int      @id @default(autoincrement())
  user              User     @relation(fields: [user_id], references: [id])
  user_id           Int      @unique
  thesis            Thesis[]
  enrolled_subject  EnrolledSubject[]
}

model Adviser {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [user_id], references: [id])
  user_id     Int         @unique
  thesis      Thesis[]
  panelists   Thesis[]    @relation("ThesisPanelists")
  secretary   Thesis[]    @relation("ThesisSecretary")
}

model Room {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  location    String?
  capacity    Int?
  thesis      Thesis[]
}

model Consultation {
  id             Int      @id @default(autoincrement())
  date_time      DateTime @default(now())
  location       String?
  recommendation Int?
  thesis         Thesis   @relation(fields: [thesis_id], references: [id])
  thesis_id      Int
}

model Thesis {
  id             Int             @id @default(autoincrement())
  thesis_title   String
  student        Student?        @relation(fields: [student_id], references: [id])
  student_id     Int?
  adviser        Adviser?        @relation(fields: [adviser_id], references: [id])
  adviser_id     Int?
  defense_phase  String?
  is_confirmed   Boolean?
  message        String?
  user           User?           @relation(fields: [user_id], references: [id])
  user_id        Int?
  proposals      Proposal[]
  panelists      Adviser[]       @relation("ThesisPanelists")  
  secretary      Adviser?        @relation("ThesisSecretary", fields: [secretary_id], references: [id])
  secretary_id   Int?
  defense_date   DateTime?
  defense_time   DateTime?
  room           Room?           @relation(fields: [room_id], references: [id])
  room_id        Int?
  created_at     DateTime        @default(now())
  consultations  Consultation[]  
}


model Proposal {
  id          Int         @id @default(autoincrement())
  thesis      Thesis      @relation(fields: [thesis_id], references: [id])
  thesis_id   Int
  file_url    String
  uploaded_at DateTime    @default(now())
}

model EnrolledSubject {
  id            Int         @id @default(autoincrement())
  student       Student     @relation(fields: [student_id], references: [id])
  student_id    Int
  subject_name  String
  or_number     String
  attachment    String
  is_confirmed  Boolean?
  message       String?
  enrolled_at   DateTime    @default(now())
}